# ===============================================
# ENTERPRISE-GRADE DOCKER MEDIA STACK
# ===============================================
# 
# Infrastructure Architecture:
# - ZFS Storage Backend with automatic mount detection
# - GPU-accelerated transcoding (AMD Radeon support)
# - VPN-secured downloading with kill-switch protection
# - Reverse proxy with SSL termination
# - Comprehensive health monitoring and resource management
# - Multi-network isolation for security
# 
# Services included:
# - Caddy (Reverse Proxy with automatic HTTPS)
# - Jellyfin (GPU-accelerated Media Server)
# - Jellyseerr (Media Request Management)
# - *arr Suite (Radarr, Sonarr, Lidarr, Bazarr, Prowlarr)
# - qBittorrent (VPN-secured Download Client)
# - Gluetun (VPN Container with kill-switch)
# - Homer (Service Dashboard)
# - Advanced monitoring and logging
# ===============================================

services:
  # Reverse Proxy - Caddy with automatic SSL
  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${ROOT_CONFIG}/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${ROOT_CONFIG}/caddy/data:/data
      - ${ROOT_CONFIG}/caddy/config:/config
    environment:
      - CADDY_INGRESS_NETWORKS=default,media_network
    dns:
      - 1.1.1.1     # Cloudflare DNS
      - 8.8.8.8     # Google DNS
    restart: unless-stopped
    networks:
      - default
      - media_network
      - vpn-net
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 1.0

  # Media Server - Jellyfin with GPU acceleration
  jellyfin:
    image: jellyfin-lsio-opencl:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHED_URL}
    volumes:
      - ${ROOT_CONFIG}/jellyfin:/config
      - ${MOVIES_PATH}:/movies:ro
      - ${TV_PATH}:/tv:ro
      - ${MUSIC_PATH}:/music:ro
      - ${JELLYFIN_CACHE}:/cache
      - /tmp:/tmp:rw
    devices:
      - /dev/dri/card1:/dev/dri/card1  # Primary GPU
      - /dev/dri/card0:/dev/dri/card0  # Secondary GPU
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - 8096:8096
    restart: unless-stopped
    networks:
      - default
      - media_network
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8096/System/Ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Performance optimization for 4K streaming
    mem_limit: 8g
    mem_reservation: 4g
    cpus: 6.0
    cpu_shares: 2048
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  # Request Management - Jellyseerr
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=info
      - TZ=${TZ}
    ports:
      - 5055:5055
    volumes:
      - ${ROOT_CONFIG}/jellyseerr:/app/config
    restart: unless-stopped
    networks:
      - default
      - media_network
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.75

  # VPN Gateway - Gluetun with kill-switch
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080  # qBittorrent WebUI
    volumes:
      - ${ROOT_CONFIG}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=openvpn
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_REGIONS=${SERVER_REGIONS}
      - DOT=off
      - DNS_ADDRESS=1.1.1.1
      - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/16,172.16.0.0/12,10.0.0.0/8
    healthcheck:
      test: ["CMD", "sh", "-c", "wget -q --spider https://1.1.1.1 && wget -q --spider https://ipinfo.io"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    networks:
      - vpn-net
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.50

  # Download Client - qBittorrent (VPN-secured)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: service:gluetun
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ${ROOT_CONFIG}/qbittorrent:/config
      - ${DOWNLOADS_PATH}:/downloads
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v2/app/version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    mem_limit: 2g
    mem_reservation: 1g
    cpus: 2.0

  # Movie Management - Radarr
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_CONFIG}/radarr:/config
      - ${MOVIES_PATH}:/movies
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped
    networks:
      - default
      - media_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7878/api/v3/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    mem_limit: 1g
    mem_reservation: 512m
    cpus: 1.0

  # TV Show Management - Sonarr
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_CONFIG}/sonarr:/config
      - ${TV_PATH}:/tv
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped
    networks:
      - default
      - media_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8989/api/v3/system/status"]
      interval: 30s
      timeout: 10s
      retries: 3
    mem_limit: 1g
    mem_reservation: 512m
    cpus: 1.0

  # Music Management - Lidarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_CONFIG}/lidarr:/config
      - ${MUSIC_PATH}:/music
      - ${DOWNLOADS_PATH}:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped
    networks:
      - default
      - media_network
    mem_limit: 1g
    mem_reservation: 512m
    cpus: 0.75

  # Subtitle Management - Bazarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_CONFIG}/bazarr:/config
      - ${MOVIES_PATH}:/movies
      - ${TV_PATH}:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    networks:
      - default
      - media_network
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.5

  # Indexer Management - Prowlarr
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_CONFIG}/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - default
      - media_network
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.5

  # Service Dashboard - Homer
  homer:
    image: b4bz/homer:latest
    container_name: homer
    volumes:
      - ${ROOT_CONFIG}/homer:/www/assets
    ports:
      - 8081:8080
    environment:
      - INIT_ASSETS=0
    restart: unless-stopped
    networks:
      - default
    mem_limit: 256m
    mem_reservation: 128m
    cpus: 0.25

networks:
  default:
    external: true
    name: homelab_default
  media_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  vpn-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16